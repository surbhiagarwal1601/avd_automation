parameters:
  # Pipeline-related parameters
  environment:
  serviceConnection:
  poolName:
  vmImage:

  # Control-related parameters
  enableDeploymentMasterARMTemplate:

jobs:
# Deploy Azure NetApp Files Profile Resources
- deployment: Deploy_ANFProfiles
  displayName: Deploy Azure NetApp Files Profile Resources
  dependsOn: ''
  environment: ${{ parameters.environment }}
  condition:  eq('${{ parameters.enableDeploymentMasterARMTemplate }}', true)
  timeoutInMinutes: 120
  pool:
    ${{ if ne(parameters.vmImage, '') }}:
        vmImage: '${{ parameters.vmImage }}'
    ${{ if ne(parameters.poolName, '') }}:
        name: '${{ parameters.poolName }}'
  strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzurePowerShell@4
              displayName: 'Validate'
              inputs:
                azureSubscription: '${{ parameters.serviceConnection }}'
                ScriptType: InlineScript
                azurePowerShellVersion: LatestVersion
                errorActionPreference: stop
                inline: |
                  $templateFilePath = "$(Build.Repository.LocalPath)/$(rgFolderPath)/deploy.json"
                  $DeploymentInputs = @{
                    TemplateFile          = $templateFilePath
                    TemplateParameterFile = "$(Build.Repository.LocalPath)/$(rgFolderPath)/Parameters/parameters.json"
                    Verbose               = $true
                    OutVariable           = "ValidationErrors"
                    Location              = '$(location)'
                  }

                  Write-Verbose 'Handling subscription level deployment' -Verbose
                  $ValidationErrors = $null
                  Test-AzSubscriptionDeployment @DeploymentInputs

                  if ($ValidationErrors) {
                    Write-Error "Template is not valid."
                  }
            - task: AzurePowerShell@4
              displayName: 'Deploy'
              inputs:
                azureSubscription: '${{ parameters.serviceConnection }}'
                azurePowerShellVersion: LatestVersion
                ScriptType: InlineScript
                errorActionPreference: stop
                inline: |
                  $templateFilePath = "$(Build.Repository.LocalPath)/$(rgFolderPath)/deploy.json"
                  $DeploymentInputs = @{
                    Name                  = "$(resourcegroupname)-$(Get-Date -Format yyyyMMddHHMMss)"
                    TemplateFile          = $templateFilePath
                    TemplateParameterFile = "$(Build.Repository.LocalPath)/$(rgFolderPath)/Parameters/parameters.json"
                    Verbose               = $true
                    ErrorAction           = "Stop"
                    Location              = '$(location)'
                  }
                  New-AzSubscriptionDeployment @DeploymentInputs