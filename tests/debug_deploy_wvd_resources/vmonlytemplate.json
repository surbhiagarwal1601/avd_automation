{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "vmName": {
            "type": "string"
        },
        "vmLoopIndex": {
            "type": "int"
        },
        "vmComputerNames": {
            "type": "object"
        },
        "vmComputerNamesTransformation": {
            "type": "string"
        },
        "useAvailabilityZone": {
            "type": "bool"
        },
        "availabilityZone": {
            "type": "string"
        },
        "plan": {
            "type": "object"
        },
        "nicConfigurations": {
            "type": "array"
        },
        "lockForDeletion": {
            "type": "bool"
        },
        "diagnosticSettingName": {
            "type": "string"
        },
        "diagnosticStorageAccountId": {
            "type": "string"
        },
        "workspaceId": {
            "type": "string"
        },
        "eventHubAuthorizationRuleId": {
            "type": "string"
        },
        "eventHubName": {
            "type": "string"
        },
        "diagnosticsMetrics": {
            "type": "array"
        },
        "diagnosticLogsRetentionInDays": {
            "type": "int"
        },
        "vmSize": {
            "type": "string"
        },
        "imageReference": {
            "type": "object"
        },
        "osDisk": {
            "type": "object"
        },
        "dataDisks": {
            "type": "array"
        },
        "enableServerSideEncryption": {
            "type": "bool"
        },
        "ultraSSDEnabled": {
            "type": "bool"
        },
        "adminUsername": {
            "type": "securestring"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "customData": {
            "type": "string"
        },
        "windowsConfiguration": {
            "type": "object"
        },
        "linuxConfiguration": {
            "type": "object"
        },
        "certificatesToBeInstalled": {
            "type": "array"
        },
        "allowExtensionOperations": {
            "type": "bool"
        },
        "bootDiagnosticStorageAccountName": {
            "type": "string"
        },
        "bootDiagnosticStorageAccountUri": {
            "type": "string"
        },
        "avSetNames": {
            "type": "array"
        },
        "maxNumberOfVmsPerAvSet": {
            "type": "int"
        },
        "maxNumberOfVmsPerDeployment": {
            "type": "int"
        },
        "bulkVMdeploymentLoopIndex": {
            "type": "int"
        },
        "proximityPlacementGroupName": {
            "type": "string"
        },
        "vmPriority": {
            "type": "string"
        },
        "enableEvictionPolicy": {
            "type": "bool"
        },
        "dedicatedHostId": {
            "type": "string"
        },
        "licenseType": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "domainJoinUser": {
            "type": "string"
        },
        "domainJoinOU": {
            "type": "string"
        },
        "domainJoinRestart": {
            "type": "bool"
        },
        "domainJoinOptions": {
            "type": "int"
        },
        "domainJoinPassword": {
            "type": "securestring"
        },
        "enableMicrosoftAntiMalware": {
            "type": "bool"
        },
        "microsoftAntiMalwareSettings": {
            "type": "object"
        },
        "enableWindowsMMAAgent": {
            "type": "bool"
        },
        "enableLinuxMMAAgent": {
            "type": "bool"
        },
        "enableWindowsDiskEncryption": {
            "type": "bool"
        },
        "forceUpdateTag": {
            "type": "string"
        },
        "keyVaultUri": {
            "type": "string"
        },
        "keyVaultId": {
            "type": "string"
        },
        "keyEncryptionKeyURL": {
            "type": "string"
        },
        "diskKeyEncryptionAlgorithm": {
            "type": "string"
        },
        "diskEncryptionVolumeType": {
            "type": "string"
        },
        "resizeOSDisk": {
            "type": "bool"
        },
        "enableLinuxDiskEncryption": {
            "type": "bool"
        },
        "enableWindowsDependencyAgent": {
            "type": "bool"
        },
        "enableLinuxDependencyAgent": {
            "type": "bool"
        },
        "enableNetworkWatcherWindows": {
            "type": "bool"
        },
        "enableNetworkWatcherLinux": {
            "type": "bool"
        },
        "identity": {
            "type": "object"
        },
        "dscConfiguration": {
            "type": "object"
        },
        "windowsScriptExtensionFileData": {
            "type": "array"
        },
        "windowsScriptExtensionCommandToExecute": {
            "type": "securestring"
        },
        "cseStorageAccountName": {
            "type": "string"
        },
        "cseStorageAccountKey": {
            "type": "string"
        },
        "cseManagedIdentity": {
            "type": "object"
        },
        "maxPriceForLowPriorityVm": {
            "type": "securestring"
        },
        "accountSasProperties": {
            "type": "object"
        },
        "roleAssignments": {
            "type": "array"
        },
        "builtInRoleNames": {
            "type": "object"
        },
        "backupVaultName": {
            "type": "string"
        },
        "backupVaultResourceGroup": {
            "type": "string"
        },
        "backupPolicyName": {
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "identity": "[parameters('identity')]",
            "tags": "[parameters('tags')]",
            "zones": "[if(parameters('useAvailabilityZone'), array(parameters('availabilityZone')), json('null'))]",
            "plan": "[if(empty(parameters('plan')), json('null'),parameters('plan'))]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), '-disk-os-01')]",
                        "createOption": "[parameters('osDisk').createOption]",
                        "diskSizeGB": "[parameters('osDisk').diskSizeGB]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDisk').managedDisk.storageAccountType]"
                        }
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[length(parameters('dataDisks'))]",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]",
                                "name": "[concat(parameters('vmName'), '-disk-data-', padLeft(copyIndex('dataDisks',1),2,'0'))]",
                                "diskSizeGB": "[parameters('dataDisks')[copyIndex('dataDisks')].diskSizeGB]",
                                "createOption": "[parameters('dataDisks')[copyIndex('dataDisks')].createOption]",
                                "caching": "[parameters('dataDisks')[copyIndex('dataDisks')].caching]",
                                "managedDisk": {
                                    "storageAccountType": "[parameters('dataDisks')[copyIndex('dataDisks')].managedDisk.storageAccountType]",
                                    "diskEncryptionSet": {
                                        "id": "[if(parameters('enableServerSideEncryption'), parameters('dataDisks')[copyIndex('dataDisks')].managedDisk.diskEncryptionSet.id, json('null'))]"
                                    }
                                }
                            }
                        }
                    ]
                },
                "additionalCapabilities": {
                    "ultraSSDEnabled": "[parameters('ultraSSDEnabled')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmComputerNameTransformed')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[if(empty(parameters('customData')), json('null'), base64(parameters('customData')))]",
                    "windowsConfiguration": "[if(empty(parameters('windowsConfiguration')), json('null'),parameters('windowsConfiguration'))]",
                    "linuxConfiguration": "[if(empty(parameters('linuxConfiguration')), json('null'),parameters('linuxConfiguration'))]",
                    "secrets": "[parameters('certificatesToBeInstalled')]",
                    "allowExtensionOperations": "[parameters('allowExtensionOperations')]"
                    //"requireGuestProvisionSignal": "[parameters('requireGuestProvisionSignal')]"
                },
                "networkProfile": {
                    "copy": [
                        {
                            "name": "networkInterfaces",
                            "count": "[length(parameters('nicConfigurations'))]",
                            "input": {
                                "properties": {
                                    "primary": "[if(equals(copyIndex('networkInterfaces'), 0), 'true', 'false')]"
                                },
                                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), parameters('nicConfigurations')[copyIndex('networkInterfaces')].nicSuffix))]"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[not(empty(parameters('bootDiagnosticStorageAccountName')))]",
                        "storageUri": "[if(empty(parameters('bootDiagnosticStorageAccountName')), json('null'), concat('https://', parameters('bootDiagnosticStorageAccountName'), parameters('bootDiagnosticStorageAccountUri')))]"
                    }
                },
                "availabilitySet": "[if(not(empty(variables('availabilitySetName'))), json(concat('{\"id\":\"', resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName')),'\"}')), json('null'))]",
                "proximityPlacementGroup": "[if(empty(parameters('proximityPlacementGroupName')), json('null'), json(concat('{\"id\":\"', resourceId('Microsoft.Compute/proximityPlacementGroups', parameters('proximityPlacementGroupName')),'\"}')))]",
                "priority": "[parameters('vmPriority')]",
                "evictionPolicy": "[if(parameters('enableEvictionPolicy'), 'Deallocate', json('null'))]",
                "billingProfile": "[if(and(not(empty(parameters('vmPriority'))),not(empty(parameters('maxPriceForLowPriorityVm')))), json(concat('{\"maxPrice\":\"',parameters('maxPriceForLowPriorityVm'),'\"}')), json('null'))]",
                "host": "[if(not(empty(parameters('dedicatedHostId'))), json(concat('{\"id\":\"',parameters('dedicatedHostId'),'\"}')), json('null'))]",
                "licenseType": "[if(empty(parameters('licenseType')), json('null'),parameters('licenseType'))]"
            },
            "resources": [
                // VM locks
                {
                    "type": "providers/locks",
                    "apiVersion": "2016-09-01",
                    "condition": "[parameters('lockForDeletion')]",
                    "name": "Microsoft.Authorization/vmDoNotDelete",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                    ],
                    "comments": "Resource lock on Azure Virtual Machines",
                    "properties": {
                        "level": "CannotDelete"
                    }
                },
                // VM DomainJoin extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'),'/DomainJoin')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[not(empty(parameters('domainName')))]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "Name": "[parameters('domainName')]",
                            "User": "[parameters('domainJoinUser')]",
                            "OUPath": "[parameters('domainJoinOU')]",
                            "Restart": "[parameters('domainJoinRestart')]",
                            "Options": "[parameters('domainJoinOptions')]"
                        },
                        "protectedSettings": {
                            "Password": "[parameters('domainJoinPassword')]"
                        }
                    }
                },
                // VM MicrosoftAntiMalware extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/MicrosoftAntiMalware')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableMicrosoftAntiMalware')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'DomainJoin')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": "[parameters('microsoftAntiMalwareSettings')]"
                    }
                },
                // VM WindowsMMAAgent extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/WindowsMMAAgent')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableWindowsMMAAgent')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'MicrosoftAntiMalware')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[if(empty(parameters('workspaceId')), 'dummy', reference(parameters('workspaceId'), '2015-11-01-preview').customerId)]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[if(empty(parameters('workspaceId')), 'dummy', listKeys(parameters('workspaceId'), '2015-11-01-preview').primarySharedKey)]"
                        }
                    }
                },
                // VM LinuxMMAAgent extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/LinuxMMAAgent')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableLinuxMMAAgent')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'WindowsMMAAgent')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "OmsAgentForLinux",
                        "typeHandlerVersion": "1.7",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[if(empty(parameters('workspaceId')), 'dummy', reference(parameters('workspaceId'), '2015-11-01-preview').customerId)]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[if(empty(parameters('workspaceId')), 'dummy', listKeys(parameters('workspaceId'), '2015-11-01-preview').primarySharedKey)]"
                        }
                    }
                },
                // VM WindowsDiskEncryption extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/WindowsDiskEncryption')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableWindowsDiskEncryption')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'LinuxMMAAgent')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "2.2",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[parameters('forceUpdateTag')]",
                        "settings": {
                            "EncryptionOperation": "EnableEncryption",
                            "KeyVaultURL": "[parameters('keyVaultUri')]",
                            "KeyVaultResourceId": "[parameters('keyVaultId')]",
                            "KeyEncryptionKeyURL": "[parameters('keyEncryptionKeyURL')]",
                            "KekVaultResourceId": "[parameters('keyVaultId')]",
                            "KeyEncryptionAlgorithm": "[parameters('diskKeyEncryptionAlgorithm')]",
                            "VolumeType": "[parameters('diskEncryptionVolumeType')]",
                            "ResizeOSDisk": "[parameters('resizeOSDisk')]"
                        }
                    }
                },
                // VM LinuxDiskEncryption extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/LinuxDiskEncryption')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableLinuxDiskEncryption')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'WindowsDiskEncryption')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryptionForLinux",
                        "typeHandlerVersion": "1.1",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[parameters('forceUpdateTag')]",
                        "settings": {
                            "EncryptionOperation": "EnableEncryption",
                            "KeyVaultURL": "[parameters('keyVaultUri')]",
                            "KeyVaultResourceId": "[parameters('keyVaultId')]",
                            "KeyEncryptionKeyURL": "[parameters('keyEncryptionKeyURL')]",
                            "KekVaultResourceId": "[parameters('keyVaultId')]",
                            "KeyEncryptionAlgorithm": "[parameters('diskKeyEncryptionAlgorithm')]",
                            "VolumeType": "[parameters('diskEncryptionVolumeType')]"
                        }
                    }
                },
                // VM DependencyAgentWindows extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2019-07-01",
                    "name": "[concat(parameters('vmName'), '/DependencyAgentWindows')]",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableWindowsDependencyAgent')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'LinuxDiskEncryption')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                        "type": "DependencyAgentWindows",
                        "typeHandlerVersion": "9.5",
                        "autoUpgradeMinorVersion": true
                    }
                },
                // VM DependencyAgentLinux extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2019-07-01",
                    "name": "[concat(parameters('vmName'), '/DependencyAgentLinux')]",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableLinuxDependencyAgent')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'DependencyAgentWindows')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                        "type": "DependencyAgentLinux",
                        "typeHandlerVersion": "9.5",
                        "autoUpgradeMinorVersion": true
                    }
                },
                // VM NetworkWatcherAgentWindows extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/NetworkWatcherAgentWindows')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableNetworkWatcherWindows')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'DependencyAgentLinux')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        }
                    }
                },
                // VM NetworkWatcherAgentLinux extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/NetworkWatcherAgentLinux')]",
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "condition": "[parameters('enableNetworkWatcherLinux')]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'NetworkWatcherAgentWindows')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        }
                    }
                },
                // VM windowsDsc extension
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('vmName'), '/windowsDsc')]",
                    "apiVersion": "2018-10-01",
                    "location": "[parameters('location')]",
                    "condition": "[not(empty(parameters('dscConfiguration')))]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('vmName'), 'NetworkWatcherAgentLinux')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.77",
                        "autoUpgradeMinorVersion": true,
                        "settings": "[parameters('dscConfiguration').settings]",
                        "protectedSettings": "[if( contains(parameters('dscConfiguration'), 'protectedSettings'), parameters('dscConfiguration').protectedSettings, json('null') )]"
                    }
                }
            ]
        }
    ]
}