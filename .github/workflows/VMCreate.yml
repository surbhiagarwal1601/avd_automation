name: Test Floe
on:
  workflow_dispatch:
    inputs:
      resourceGroupName:
        description: 'Name of the Azure Files profiles resource group'
        required: true
        default: 'test'
        type: string
env:
  ## GENERAL ##
  rgFolder: test  
  storageContainerMapPath: Parameters/Uploads/assets.config.json
  wvdUploadsPath: WVD/OrchestrationSources/Uploads

  # ResourceGroup related
  # resourceGroupName: AVD-HostPool-RG - From User Input

  # Host Pool related
  HostPoolName: avd-hp

  # Imaging
  ## Custom Image
  # If a custom image reference is provided, it is picked up instead of any provided marketplace image information. If not used, should be set to '' (empty)
  # Is used for the host-pool image update process (if enabled)
  customImageReferenceId: ''

  ## Marketplace Image
  # Is used for the host-pool image update process (if enabled)
  publisher: MicrosoftWindowsServer
  offer: WindowsServer
  sku: 2016-Datacenter
  version: latest
  imagelocation: '' # Required if not using the 'customImageReferenceId' and 'version' equals 'latest'

  # Image Lifecycle related
  # -----------------------
  DeleteVMDeadline: '' # In 'yyyyMMddHHmm'. The deadline after which outdated VMs are delete
  LogoffDeadline: '' # In 'yyyyMMddHHmm'. The deadline after which users are log-off by force
  LogOffMessageTitle: 'Logging off' # PopUp title shown to users if they are warned of an upcoming imminent log-off
  LogOffMessageBody: 'Forcing Log off to update os.' # PopUp text shown to users if they are warned of an upcoming imminent log-off
  UtcOffset: 0 #<ReplaceWith-UtcOffset> # Time difference to UTC. Enabled handling of different time zones.
  LAWorkspaceName: 'log-analytics-dad42fd927a' # Name of an OMS workspace to send host-pool image update process logs to
  stateStorageAccountName: '' # avdtoassetsstore #<ReplaceWith-StateStorageAccountName>
  stateTableName: '' #avdtohp # <ReplaceWith-StateTableName>
  

jobs:
  Deploy_VirtualMachines:
    name: Virtual Machines (Session Hosts)
    uses: ./.github/workflows/vmcreatedeploy.yml
    with:
      resourceGroupName: ${{ github.event.inputs.resourceGroupName }}
      UtcOffset: -13
      rgFolder: WVD-HostPool-01-TO-RG
      location: westus2
      jsonParameterToEnable: enableVmResources
      restartVMsAfterExtensionsDeployment: ${{ github.event.inputs.enableRestartVMsAfterExtensionsDeployment == 'true' }}
    secrets:
      AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
      COMPONENT_STORAGE_ACCOUNT_ID: ${{secrets.COMPONENT_STORAGE_ACCOUNT_ID}}
  
  Debug_Deploy_VirtualMachines:
    runs-on: ubuntu-latest
    needs: Deploy_VirtualMachines
    if: ${{ always() }}     
    steps:
      - run: |
          echo job_id ${{ github.job }}
          echo job.status ${{ job.status }}

          echo enableDeploymentMasterARMTemplate ${{ github.event.inputs.enableDeploymentMasterARMTemplate }}
          echo enableDeploymentMasterARMTemplate is true ${{ github.event.inputs.enableDeploymentMasterARMTemplate == 'true' }} 
          
          echo Update_AssetsStorageAccount results ${{ needs.Update_AssetsStorageAccount.result }}
          echo Update_AssetsStorageAccount contains success ${{ contains(needs.Update_AssetsStorageAccount.result, 'success') }}
          echo Update_AssetsStorageAccount contains skipped ${{ contains(needs.Update_AssetsStorageAccount.result, 'skipped') }}
          echo Update_AssetsStorageAccount contains failure ${{ contains(needs.Update_AssetsStorageAccount.result, 'failure') }}
          echo Update_AssetsStorageAccount contains cancelled ${{ contains(needs.Update_AssetsStorageAccount.result, 'cancelled') }}

          echo Sync_HostPoolVMs results ${{ needs.Sync_HostPoolVMs.result }}    
          echo Sync_HostPoolVMs contains success ${{ contains(needs.Sync_HostPoolVMs.result, 'success')}}
          echo Sync_HostPoolVMs contains skipped ${{ contains(needs.Sync_HostPoolVMs.result, 'skipped')}}
          echo Sync_HostPoolVMs contains failure ${{ contains(needs.Sync_HostPoolVMs.result, 'failure')}}
          echo Sync_HostPoolVMs contains cancelled ${{ contains(needs.Sync_HostPoolVMs.result, 'cancelled')}}

          echo Deploy_VirtualMachines Result ${{ needs.Deploy_VirtualMachines.result }}
          echo Deploy_VirtualMachines contains success ${{ contains(needs.Deploy_VirtualMachines.result, 'success')}}
          echo Deploy_VirtualMachines contains skipped ${{ contains(needs.Deploy_VirtualMachines.result, 'skipped')}}
          echo Deploy_VirtualMachines contains failure ${{ contains(needs.Deploy_VirtualMachines.result, 'failure')}}
          echo Deploy_VirtualMachines contains cancelled ${{ contains(needs.Deploy_VirtualMachines.result, 'cancelled')}}

          echo Deploy_VirtualMachinesRetry1 Result ${{ needs.Deploy_VirtualMachinesRetry1.result }}
          echo Deploy_VirtualMachinesRetry1 contains success ${{ contains(needs.Deploy_VirtualMachinesRetry1.result, 'success')}}
          echo Deploy_VirtualMachinesRetry1 contains skipped ${{ contains(needs.Deploy_VirtualMachinesRetry1.result, 'skipped')}}
          echo Deploy_VirtualMachinesRetry1 contains failure ${{ contains(needs.Deploy_VirtualMachinesRetry1.result, 'failure')}}
          echo Deploy_VirtualMachinesRetry1 contains cancelled ${{ contains(needs.Deploy_VirtualMachinesRetry1.result, 'cancelled')}}

          echo Deploy_VirtualMachinesRetry2 Result ${{ needs.Deploy_VirtualMachinesRetry2.result }}
          echo Deploy_VirtualMachinesRetry2 contains success ${{ contains(needs.Deploy_VirtualMachinesRetry2.result, 'success')}}
          echo Deploy_VirtualMachinesRetry2 contains skipped ${{ contains(needs.Deploy_VirtualMachinesRetry2.result, 'skipped')}}
          echo Deploy_VirtualMachinesRetry2 contains failure ${{ contains(needs.Deploy_VirtualMachinesRetry2.result, 'failure')}}
          echo Deploy_VirtualMachinesRetry2 contains cancelled ${{ contains(needs.Deploy_VirtualMachinesRetry2.result, 'cancelled')}}

  Deploy_VMExtensions:
    name: Deploy Virtual Machine Extensions
    needs: [ Deploy_VirtualMachines]
    uses: ./.github/workflows/vmcreatedeploy.yml
    with:
      resourceGroupName: ${{ github.event.inputs.resourceGroupName }}
      UtcOffset: -13
      rgFolder: WVD-HostPool-01-TO-RG
      location: westus2
      jsonParameterToEnable: enableVmExtensions
      restartVMsAfterExtensionsDeployment: ${{ github.event.inputs.enableRestartVMsAfterExtensionsDeployment == 'true' }}
    secrets:
      AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
      COMPONENT_STORAGE_ACCOUNT_ID: ${{secrets.COMPONENT_STORAGE_ACCOUNT_ID}}
